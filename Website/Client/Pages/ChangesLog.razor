@page  "/changes-log"
    <h1>Changes Log</h1>
<h2>Version</h2>
<h3>1.0.3 [2021-07-07]</h3>
<ul>
    <li>Change delegates from <var>Task</var> to <var>void</var>. Be aware if you are using events or a derivate class</li>
    <li>Add <var>RenderFragment</var> <i>InputContent</i> To personalize the content in input file button</li>
    <li>Remove <var>string</var> <i>ButtonText</i></li>
    <li>Change Property <var>EndPoint</var> with name <var>FromAction</var></li>
    <li>Add <var>RenderFragment</var> <i>ButtonContent</i> To personalize the content in button upload</li>
    <li>Add isolate CSS for some default style on <i>InputCss</i>. Default class <i>input-file button-file</i></li>
    <li>Add isolate CSS for some default style on <i>ButtonCss</i>. Default class <i>input-file button-upload</i></li>
    <li><strong>Isolate CSS</strong>
<pre>
<code>    ::deep input[type="file"] {
    display: none;
    }

    .input-file {
    padding: 0.3rem 2rem;
    box-shadow: darkgrey 0 0 0.5rem 0.1rem;
    border-radius: 0.2rem;
    display: inline-block;
    margin: 0 0.3rem;
    text-align: center;
    }

    .button-file {
    background: #e8e8e8;
    }

    .button-upload {
    background: #00188a;
    color: whitesmoke;
    }

    .info {
    color: forestgreen;
    width: 100%;
    }
</code>
</pre>
    </li>

</ul>
<h3>1.0.2 [2021-07-06]</h3>
<ul>
    <li>Add Clean() method to remove all files loaded into the InputFileHandler</li>
    <li>Add CleanOnSuccessUpload Property in InputFileExtended. Default value <i>false</i>. This automatic clean the files load into the component after send with the upload form action.</li>
    <li>Add methods to manage events from a derivate class.</li>
</ul>