@page "/how-to-use/handler"
<h1>How to use</h1>
<h2>InputFileHandler</h2>
<h3>namespace BlazorInputFileExtended</h3>
<p>Also you can use directly the InputFileHandler with the component InputFile or to personalize how to manage the upload with InputFileExtended.</p>
<p>You can use when you need validate first the form before send. Then you can use the <i>Events</i> and manage how to upload the file directly with the handler. Here we show all the process. </p>
<h5>Messages log:</h5>
<p>@Messages</p>
<div class="row">
    <div class="col">
        <h4>Using InputFile</h4>
        <InputFile OnChange="FileHandler.UploadFile" />
        <button class="btn btn-primary" @onclick="Upload">Upload</button>
<pre>
<code>&lt;InputFile OnChange="FileHandler.UploadFile" &lt;/InputFile&gt;  
&lt;button class="btn btn-primary" @@onclick="Upload"&gt;Upload &lt;/button&gt;

@@code{
        InputFileHandler FileHandler;
        string Messages;

        protected override void OnInitialized()
        {
            FileHandler = new InputFileHandler();
            FileHandler.OnUploadFile += FileHandler_OnUploadFile;
        }

        private void FileHandler_OnUploadFile(object sender, FileUploadEventArgs e)
        {
            FileHandler.Add(e.File);
            Messages = $"File {e.File.Name} chosen. Total size {e.File.Size}.";
        }

        async Task Upload()
        {
            Messages = $"Start upload simulating ...";
            foreach(FileUploadContent file in FileHandler)
            {
                //upload each image
                Messages = $"Uploading image {file.Name}";
                await Task.Delay(1000);
            }
            Messages = $"Files Upload";
        }
}
</code>
</pre>
    </div>
</div>
<GAdSense />