<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BlazorInputFileExtended</name>
    </assembly>
    <members>
        <member name="T:BlazorInputFileExtended.Helpers.FormData">
            <summary>
            Class with helpers about the form data
            </summary>
        </member>
        <member name="M:BlazorInputFileExtended.Helpers.FormData.SetMultipartFormDataContent``1(``0)">
            <summary>
            Get a object and encaprulate into a MultipartFormDataContent
            </summary>
            <typeparam name="TModel"></typeparam>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:BlazorInputFileExtended.InputFileExtended">
            <summary>
            InputFile Extension with all necessary to upload files.
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.Client">
            <summary>
            If want to use the upload must be have HttpClient.
            That's why is automatic injected
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.JavaScript">
            <summary>
            Inject JavaScript interoperability
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.Navigation">
            <summary>
            To setup correctly the urls to get the javascripts
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.MultiFile">
            <summary>
            Set if we will accept multiple files uploaded or not
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.MaxUploatedFiles">
            <summary>
            Number maximum of files can be uploaded
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.MaxFileSize">
            <summary>
            Maximum file size per each file
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.CleanOnSuccessUpload">
            <summary>
            Clean all files after success upload
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.SelectionText">
            <summary>
            Message to show when files are selected
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.SelectionCss">
            <summary>
            CSS class to personalize the selection text info
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.InputCss">
            <summary>
            CSS InputFile
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.InputTitle">
            <summary>
            InputFile title
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.InputFileTypes">
            <summary>
            File types accepted. Example: image/*
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.InputContent">
            <summary>
            Text to show for the file selection
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.ButtonShow">
            <summary>
            Show the save button
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.ButtonCss">
            <summary>
            CSS button save
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.ButtonContent">
            <summary>
            Button text
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.ButtonTitle">
            <summary>
            Button title
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.IsImage">
            <summary>
            Inicate if the file it's a image
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.ShowPreview">
            <summary>
            If IsImage = true this indicate if need to do a preview
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.PreviewWrapperCss">
            <summary>
            CSS class for the preview image wrapper. Default image
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.FileCss">
            <summary>
            CSS class for the image file
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.TargetFormDataContent">
            <summary>
            Form data to send in a post action with the files
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.TargetDataObject">
            <summary>
            Form data to send in a post action with the files
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.TargetFormFieldName">
            <summary>
            Used when send in a post action, this indicate the field name are expecting
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.TargetToPostFile">
            <summary>
            End point to call in a post action
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.Files">
            <summary>
            Expose InputFileHandler to manage the files when the component have reference. Example to show all the images.
            </summary>
        </member>
        <member name="F:BlazorInputFileExtended.InputFileExtended.InputFileId">
            <summary>
            Know the Id assigned to the input file to use from some external CSS or JAVASCRIPT when has reference name
            </summary>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileExtended.Clean">
            <summary>
            Clean all the files
            </summary>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileExtended.OnInitialized">
            <summary>
            Initialize the component
            </summary>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileExtended.OnParametersSet">
            <summary>
            Format the component with the properties
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.OnUploadedFile">
            <summary>
            When each file is uploaded
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.OnUploadComleted">
            <summary>
            When all files is uploaded
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.OnError">
            <summary>
            When some error occurs
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.OnSave">
            <summary>
            When upload is completed
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.OnChange">
            <summary>
            To setup correctly the urls to get the javascripts
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.CanDropFiles">
            <summary>
            Enable is can drop files
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.DropZoneCss">
            <summary>
            Css when drop a file
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileExtended.DroppingCss">
            <summary>
            Css when drop a file
            </summary>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileExtended.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Setup the drag and drop support
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileExtended.LoadDropScriptsAsync">
            <summary>
            Add the scripts fro can drop files
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileExtended.UnLoadDropScriptsAsync">
            <summary>
            Remove drag and drop options
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileExtended.DragEnter">
            <summary>
            Change class to know we are in the drag area
            </summary>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileExtended.DragLeave">
            <summary>
            Remove the class because we are not in the drag area
            </summary>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileExtended.Dispose">
            <summary>
            Dispose action
            </summary>
        </member>
        <member name="T:BlazorInputFileExtended.InputFileHandler">
            <summary>
            Manage upload files
            </summary>
        </member>
        <member name="F:BlazorInputFileExtended.InputFileHandler.HttpClient">
            <summary>
            Need to use the post actions
            </summary>
        </member>
        <member name="F:BlazorInputFileExtended.InputFileHandler.UploadedFiles">
            <summary>
            All files uploaded
            </summary>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.#ctor(System.Net.Http.HttpClient,System.Int32,System.Int64,System.String)">
            <summary>
            Can upload files
            </summary>
            <param name="httpClient"></param>
            <param name="maxFiles">Maximum files allowed to upload</param>
            <param name="maxSize">Maximum file size to upload</param>
            <param name="formField">Form content name to upload the file</param>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileHandler.Item(System.Int32)">
            <summary>
            Define the indexer to allow client code to use [] notation to access directly to the file. 
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileHandler.Item(System.String)">
            <summary>
            Define the indexer to allow client code to use [] notation to access directly to the file by file name. 
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileHandler.First">
            <summary>
            Return first image from the dictionary
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileHandler.Last">
            <summary>
            Return last image from the dictionary
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileHandler.Count">
            <summary>
            Return how many images have stored
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.InputFileHandler.Size">
            <summary>
            Return total file size uploaded
            </summary>
        </member>
        <member name="F:BlazorInputFileExtended.InputFileHandler.UploadedImage">
            <summary>
            Last File stream uploaded
            </summary>
        </member>
        <member name="F:BlazorInputFileExtended.InputFileHandler.FileName">
            <summary>
            Last File name uploaded
            </summary>
        </member>
        <member name="T:BlazorInputFileExtended.InputFileHandler.UploadEventHandler">
            <summary>
            Delegate to manage OnUploadFile
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="T:BlazorInputFileExtended.InputFileHandler.UploadsEventHandler">
            <summary>
            Delegate to manage OnUploaded
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="T:BlazorInputFileExtended.InputFileHandler.UploadErrorEventHandler">
            <summary>
            Delegate to manage OnUploadError
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="T:BlazorInputFileExtended.InputFileHandler.APIErrorEventHandler">
            <summary>
            Delegate to manage OnAPIError
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:BlazorInputFileExtended.InputFileHandler.OnUploadFile">
            <summary>
            Event to notify each file uploaded
            </summary>
        </member>
        <member name="E:BlazorInputFileExtended.InputFileHandler.OnUploaded">
            <summary>
            Event to notify all files are uploaded
            </summary>
        </member>
        <member name="E:BlazorInputFileExtended.InputFileHandler.OnUploadError">
            <summary>
            Event to notify errors occurs
            </summary>
        </member>
        <member name="E:BlazorInputFileExtended.InputFileHandler.OnAPIError">
            <summary>
            Event to notify errors occurs uploading to the api
            </summary>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.OnUploadFileEvent(System.Object,BlazorInputFileExtended.FileUploadEventArgs)">
            <summary>
            Trigger the OnUploadFile from a derivated class
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.OnUploadedEvent(System.Object,BlazorInputFileExtended.FilesUploadEventArgs)">
            <summary>
            Trigger the OnUploaded from a derivated class
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.OnUploadErrorEvent(System.Object,System.ArgumentException)">
            <summary>
            Trigger the OnUploadError from a derivated class
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.OnAPIErrorEvent(System.Object,System.ArgumentException)">
            <summary>
            Trigger the OnAPIError from a derivated class
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.GetEnumerator">
            <summary>
            Enumerator to get all the files
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.UploadFile(Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs)">
            <summary>
            Use with InputFile OnChange
            </summary>
            <param name="e">InputFileChangeEventArgs</param>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.Add(BlazorInputFileExtended.FileUploadContent)">
            <summary>
            Add a image
            </summary>
            <param name="image"></param>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.Update(System.Int32,BlazorInputFileExtended.FileUploadContent)">
            <summary>
            Update image by index
            </summary>
            <param name="index"></param>
            <param name="image"></param>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.Update(System.String,BlazorInputFileExtended.FileUploadContent)">
            <summary>
            Update image by file name
            </summary>
            <param name="fileName"></param>
            <param name="image"></param>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.Update(System.Guid,BlazorInputFileExtended.FileUploadContent)">
            <summary>
            Update image by file FileId
            </summary>
            <param name="id"></param>
            <param name="image"></param>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.Remove(System.Int32)">
            <summary>
            Remove image from index
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.Remove(BlazorInputFileExtended.FileUploadContent)">
            <summary>
            Remove image
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.Remove(System.Guid)">
            <summary>
            Remove image from file name
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.Remove(System.String)">
            <summary>
            Remove image from file name
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.Clean">
            <summary>
            Remove all the files into the object
            </summary>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.SetHttpClient(System.Net.Http.HttpClient)">
            <summary>
            Set HttpClient if is not from the constructor
            </summary>
            <param name="httpClient"></param>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.SetMaxFiles(System.Int32)">
            <summary>
            Set the max allowed files
            </summary>
            <param name="maxfile"></param>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.SetMaxFileSize(System.Int64)">
            <summary>
            Set the max file size allowed
            </summary>
            <param name="maxSize"></param>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.SetFormField(System.String)">
            <summary>
            Set the field name for the form when upload files
            </summary>
            <param name="field"></param>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.UploadAsync``1(System.String,``0,System.Boolean)">
            <summary>
            Upload image using the object with the data for the form content
            </summary>
            <typeparam name="TData">Model of the data to send with the form and the file</typeparam>
            <param name="TargetToPostFile"></param>
            <param name="data">Object with the data to send with the file</param>
            <param name="ignoreFiles">Indicate if need to ignore the dictionary files or not. False upload the last image selected.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.UploadAsync(System.String)">
            <summary>
            Upload a image using the endpoint send
            </summary>
            <param name="TargetToPostFile"></param>
            <returns></returns>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.UploadAsync(System.String,Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs)">
            <summary>
            Upload a image using the endpoint send
            </summary>
            <param name="TargetToPostFile"></param>
            <param name="files"></param>
            <returns></returns>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.UploadAsync(System.String,System.Net.Http.MultipartFormDataContent)">
            <summary>
            Upload a image using the endpoint send
            </summary>
            <param name="TargetToPostFile"></param>
            <param name="content">form content to send to the url end point</param>
            <returns></returns>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.UploadAsync(System.String,System.Net.Http.MultipartFormDataContent,System.Boolean)">
            <summary>
            Upload a image using the endpoint send
            </summary>
            <param name="TargetToPostFile"></param>
            <param name="content">form content to send to the url end point</param>
            <param name="ignoreFiles">Indicate if need to ignore the dictionary files or not. False upload the last image selected.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.UploadAsync(System.String,System.Net.Http.MultipartFormDataContent,Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs)">
            <summary>
            Upload a image using the endpoint send
            </summary>
            <param name="TargetToPostFile"></param>
            <param name="content">form content to send to the url end point</param>
            <param name="files"></param>
            <returns></returns>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.UploadAsync(System.String,System.Net.Http.MultipartFormDataContent,System.Net.Http.StreamContent,System.String)">
            <summary>
            Upload a image using the endpoint send
            </summary>
            <param name="TargetToPostFile"></param>
            <param name="content">form content to send to the url end point</param>
            <param name="file"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.UploadFilesAsync(System.String,System.Net.Http.MultipartFormDataContent,System.Boolean)">
            <summary>
            Upload all files uploaded
            </summary>
            <param name="TargetToPostFile"></param>
            <param name="content"></param>
            <param name="ignoreFiles">Indicate if need to ignore the dictionary files or not. False upload the last image selected.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.UploadAsync``2(System.String,``1,System.Boolean)">
            <summary>
            Upload image using the object with the data for the form content
            </summary>
            <typeparam name="TModel">Model to use on the response from the Target to post file</typeparam>
            <typeparam name="TData">Model of the data to send with the form and the file</typeparam>
            <param name="TargetToPostFile"></param>
            <param name="data">Object with the data to send with the file</param>
            <param name="ignoreFiles">Indicate if need to ignore the dictionary files or not. False upload the last image selected.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.UploadAsync``1(System.String)">
            <summary>
            Upload a image using the endpoint send
            </summary>
            <typeparam name="TModel">Model to use on the response from the Target to post file</typeparam>
            <param name="TargetToPostFile"></param>
            <returns></returns>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.UploadAsync``1(System.String,Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs)">
            <summary>
            Upload a image using the endpoint send
            </summary>
            <typeparam name="TModel">Model to use on the response from the Target to post file</typeparam>
            <param name="TargetToPostFile"></param>
            <param name="files"></param>
            <returns></returns>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.UploadAsync``1(System.String,System.Net.Http.MultipartFormDataContent)">
            <summary>
            Upload a image using the endpoint send
            </summary>
            <typeparam name="TModel">Model to use on the response from the Target to post file</typeparam>
            <param name="TargetToPostFile"></param>
            <param name="content">form content to send to the url end point</param>
            <returns></returns>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.UploadAsync``1(System.String,System.Net.Http.MultipartFormDataContent,System.Boolean)">
            <summary>
            Upload a image using the endpoint send
            </summary>
            <typeparam name="TModel">Model to use on the response from the Target to post file</typeparam>
            <param name="TargetToPostFile"></param>
            <param name="content">form content to send to the url end point</param>
            <param name="ignoreFiles">Indicate if need to ignore the dictionary files or not. False upload the last image selected.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.UploadAsync``1(System.String,System.Net.Http.MultipartFormDataContent,Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs)">
            <summary>
            Upload a image using the endpoint send
            </summary>
            <typeparam name="TModel">Model to use on the response from the Target to post file</typeparam>
            <param name="TargetToPostFile"></param>
            <param name="content">form content to send to the url end point</param>
            <param name="files"></param>
            <returns></returns>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.UploadAsync``1(System.String,System.Net.Http.MultipartFormDataContent,System.Net.Http.StreamContent,System.String)">
            <summary>
            Upload a image using the endpoint send
            </summary>
            <typeparam name="TModel">Model to use on the response from the Target to post file</typeparam>
            <param name="TargetToPostFile"></param>
            <param name="content">form content to send to the url end point</param>
            <param name="file"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.UploadFilesAsync``1(System.String,System.Net.Http.MultipartFormDataContent,System.Boolean)">
            <summary>
            Upload all files uploaded
            </summary>
            <typeparam name="TModel"></typeparam>
            <param name="TargetToPostFile"></param>
            <param name="content"></param>
            <param name="ignoreFiles">Indicate if need to ignore the dictionary files or not. False upload the last image selected.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.DeleteAsync(System.String,System.Int32)">
            <summary>
            Delete the image
            </summary>
            <param name="TargetToPostFile">Must be return boolean the endpoint</param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.DeleteAsync(System.String,System.String)">
            <summary>
            Delete the image from the filename
            </summary>
            <param name="TargetToPostFile">Must be return boolean the endpoint</param>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.Dispose(System.Boolean)">
            <summary>
            Overwrite the dispose to clean the object
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BlazorInputFileExtended.InputFileHandler.Dispose">
            <summary>
            Dispose action
            </summary>
        </member>
        <member name="T:BlazorInputFileExtended.FilesUploadEventArgs">
            <summary>
            Return all files uploaded
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.FilesUploadEventArgs.Files">
            <summary>
            Files uploaded
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.FilesUploadEventArgs.Size">
            <summary>
            Total size of all the files uploated
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.FilesUploadEventArgs.Count">
            <summary>
            Number of the files uploated
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.FilesUploadEventArgs.Action">
            <summary>
            Action used
            </summary>
        </member>
        <member name="T:BlazorInputFileExtended.FileUploadContent">
            <summary>
            Manage the file upload
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.FileUploadContent.Name">
            <summary>
            The name of the file as specified by the browser.
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.FileUploadContent.LastModified">
            <summary>
            The last modified date as specified by the browser.
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.FileUploadContent.Size">
            <summary>
            The size of the file in bytes as specified by the browser.
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.FileUploadContent.ContentType">
            <summary>
            The MIME type of the file as specified by the browser.
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.FileUploadContent.FileStreamContent">
            <summary>
            File bites
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.FileUploadContent.FileId">
            <summary>
            Set a identifier for the file in the object
            </summary>
        </member>
        <member name="M:BlazorInputFileExtended.FileUploadContent.SetFileBytes">
            <summary>
            Set the bytes from the stream.
            Must be executed in the event OnUploadFile if you work direclt with image tag.
            </summary>
            <returns></returns>
        </member>
        <member name="P:BlazorInputFileExtended.FileUploadContent.ToImageHTML">
            <summary>
            Get the image to show in HTML pages directly
            </summary>
            <returns></returns>
        </member>
        <member name="P:BlazorInputFileExtended.FileUploadContent.FileBytes">
            <summary>
            Get the file bytes
            </summary>
        </member>
        <member name="T:BlazorInputFileExtended.FileUploadEventArgs">
            <summary>
            Return file name and file stream per each file uploaded
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.FileUploadEventArgs.File">
            <summary>
            File uploaded with all the data
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.FileUploadEventArgs.FileId">
            <summary>
            Index in the object
            </summary>
        </member>
        <member name="P:BlazorInputFileExtended.FileUploadEventArgs.Action">
            <summary>
            Action used
            </summary>
        </member>
    </members>
</doc>
